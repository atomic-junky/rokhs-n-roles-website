---
import Page from "../../layouts/Page.astro";
import { loadQuery } from "../../lib/load-query";
import { PortableText } from '@portabletext/react';

var { slug } = (Astro.params ?? "")
if (slug) slug.replaceAll('/', '');

let enabled
const referrer = Astro.url.href
if (referrer.includes('preview')) {enabled = 'true'} else {enabled = 'false'}

const { data: post } = await loadQuery({
  query: `*[_type == "post" && slug.current == "${slug}"]{
      "currentPost": { 
        "slug": slug.current, title, publishedAt, tags, body
      },
      "previousPost": *[_type == "post" && ^.publishedAt > publishedAt]|order(publishedAt desc)[0]{
        "slug": slug.current,
        "title": title
      },
      "nextPost": *[_type == "post" && ^.publishedAt < publishedAt]|order(publishedAt asc)[0]{
        "slug": slug.current,
        "title": title
      }
    }|order(publishedAt)[0]
  `,
  params: {},
  enabled,
});

// @ts-ignore
const { currentPost, previousPost, nextPost } = post;
---

<Page title={currentPost.title}>
  <section>
    <div class="post-header">
      <h1>{currentPost.title}</h1>
      <time datetime={new Date(currentPost.publishedAt).toISOString()}>
        {
          new Date(currentPost.publishedAt).toLocaleDateString("fr-FR", {
            year: "numeric",
            month: "short",
            day: "numeric",
          })
        }
      </time>
    </div>
  </section>

  <section>
    <div>
      <PortableText value={post.currentPost.body} />
    </div>
    <div class="controls">
      {nextPost && (
        <p>
          <strong>Post suivant</strong>:
          <a class="next" href={'/posts/' + nextPost.slug}>
            { nextPost.title }
          </a>
        </p>
      )}
      {previousPost && (
        <p>
          <strong>Post précédent</strong>:
          <a class="previous" href={'/posts/' + previousPost.slug}>
          { previousPost.title }</a>
        </p>
      )}
    </div>
  </section>

</Page>